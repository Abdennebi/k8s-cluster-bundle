// Copyright 2018 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package pkg.apis.bundle.v1alpha1;

option go_package = "github.com/GoogleCloudPlatform/k8s-cluster-bundle/pkg/apis/bundle/v1alpha1";

import "pkg/apis/bundle/v1alpha1/bundle_common.proto";
import "pkg/apis/bundle/v1alpha1/object_meta.proto";

// Configuration for node images.
message NodeConfig {
  // Required. Kubernetes API Version for the NodeConfig type.
  // Should be 'gke.io/k8s-cluster-bundle/v1alpha1'
  string apiVersion = 1;

  // Required. The Kubernetes `kind` for this object. Must always be
  // 'NodeConfig'.
  string kind = 2;

  // Kubernetes Metadata for the node config. The Metadata.name field must be
  // filled out and each node config in a bundle must have a unique name. For
  // example you might have a 'master-node-config' component or perhaps even a
  // 'gpu-config' config.
  ObjectMeta metadata = 3;

  // Required. Version-string for this node config. The version should be a
  // SemVer 2 string (see https://semver.org/) of the form X.Y.Z
  // (Major.Minor.Patch). A major-version changes should indicate breaking
  // changes, minor-versions should indicate backwards compatible features, and
  // patch changes should indicate backwords compatible. If there are any
  // changes to the component, then the version string must be incremented.
  string version = 4;

  // Initialization file to run on VM startup. The contents of this init file
  // will depend a great deal on the specific environment and operation system.
  oneof init_data {
    // The file specified inline as a UTF-8 encoded byte string.
    string init_file = 5;

    // An external init file.
    File external_init_file = 6;
  }

  // Envirnoment variables to set before startup to configure the init script.
  repeated EnvVar env_vars = 7;

  // The OS image to use for VM creation.
  File os_image = 8;
}

// An environment variable specified for node startup.
message EnvVar {
  // Name of this environment variable. E.g., FOO_VAR. The name of the
  // environment variable should be unique within a node bootstrap
  // configuration.
  string name = 1;

  // The value to set for this environment variable.
  string value = 2;
}
