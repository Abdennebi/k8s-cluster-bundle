// Copyright 2018 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package pkg.apis.bundle.v1alpha1;

option go_package = "github.com/GoogleCloudPlatform/k8s-cluster-bundle/pkg/apis/bundle/v1alpha1";

import "pkg/apis/bundle/v1alpha1/application_bundle.proto";
import "pkg/apis/bundle/v1alpha1/bundle_common.proto";
import "pkg/apis/bundle/v1alpha1/image_config.proto";
import "pkg/apis/bundle/v1alpha1/object_meta.proto";

// All the components necessary for deploying (or re-deploying) the cluster.
message ClusterBundle {
  // API Version for the Bundle. Should have the form <namespace>/<phase>.
  string api_version = 1;

  // The Kubernetes `kind` for this object. Should be 'ClusterBundle'.
  string kind = 2;

  // Kubernetes ObjectMeta proto.
  ObjectMeta metadata = 3;

  // Spec for the ClusterBundle, which specifies the intended Kubernetes cluster
  // configuration.
  ClusterBundleSpec spec = 4;
}

// A spec object that wraps the Cluster Bundle.
message ClusterBundleSpec {
  // The version of this cluster-bundle. Typically this should be a semantic-ver
  // string.
  string version = 1;

  // Configuration for the base OS images used for the nodes.
  repeated ImageConfig image_configs = 2;

  // Kubernetes cluster applications that are part of the bundle.
  repeated ClusterApplication cluster_apps = 3;

  // Keys for retrieving option defaults objects.
  repeated ClusterObjectKey options_defaults = 4;
}
