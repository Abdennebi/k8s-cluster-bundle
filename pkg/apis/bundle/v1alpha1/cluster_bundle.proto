// Copyright 2018 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package pkg.apis.bundle.v1alpha1;

option go_package = "github.com/GoogleCloudPlatform/k8s-cluster-bundle/pkg/apis/bundle/v1alpha1";

import "pkg/apis/bundle/v1alpha1/bundle_common.proto";
import "pkg/apis/bundle/v1alpha1/cluster_component.proto";
import "pkg/apis/bundle/v1alpha1/node_config.proto";
import "pkg/apis/bundle/v1alpha1/object_meta.proto";

// All the components necessary for deploying (or re-deploying) the cluster. A
// Cluster Bundle can be thought of as a cookie cutter for creating Kubernetes
// clusters.
message ClusterBundle {
  // API Version for the Bundle.
  string api_version = 1;

  // The Kubernetes `kind` for this object. Should be 'ClusterBundle'.
  string kind = 2;

  // Kubernetes ObjectMeta proto.
  ObjectMeta metadata = 3;

  // Spec for the ClusterBundle, which specifies the intended Kubernetes cluster
  // configuration.
  ClusterBundleSpec spec = 4;
}

// A spec object that wraps the Cluster Bundle.
message ClusterBundleSpec {
  // Configuration for the nodes.
  repeated NodeConfig node_configs = 1;

  // Kubernetes objects grouped into cluster components and versioned together.
  // These could be applications or they could be some sort of supporting
  // object collection.
  repeated ClusterComponent components = 2;

  // Options examples: These are examples of options that can be applied to the
  // cluster bundle in order to specialize it based on user input.
  repeated ClusterObjectKey options_examples = 3;
}
