// Copyright 2018 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package pkg.apis.bundle.v1alpha1;

option go_package = "github.com/GoogleCloudPlatform/k8s-cluster-bundle/pkg/apis/bundle/v1alpha1";

import "pkg/apis/bundle/v1alpha1/bundle_common.proto";

// Configuration for a base OS image used to configure the nodes.
message ImageConfig {
  // The name of this image configuration.
  string name = 1;

  // Script to run on VM startup to kick things off.
  oneof init_data {
    // The file specified inline as a UTF-8 encoded byte string.
    string init_script = 2;

    // An external file for the init script.
    File init_script_file = 3;
  }

  // Envirnoment variables to set before startup to configure the init script.
  repeated EnvVar env = 4;

  // The Base OS image to use for VM creation.
  File base_os_image = 5;

  // Preloaded files used as part of bootstrap. The presence of these files is
  // purely informational.
  repeated PreloadedFile preloaded_files = 6;
}

// An environment variable specified for node startup.
message EnvVar {
  // Name of this environment variable. E.g., FOO_VAR. The name of the
  // environment variable should be unique within a node bootstrap
  // configuration.
  string name = 1;

  // The value to set for this environment variable.
  string value = 2;
}

// A preloaded file is a file that must exist on the OS before cluster
// installation occurrs.
message PreloadedFile {
  // Name of the bootstrap file.
  // For example: `kubelet`.
  string name = 1;

  // An optional version for this file. Not all files will be versioned, but
  // some (like the kubelet binary) will.
  string version = 2;

  // The actual path and hash representing this file.
  File file = 3;
}
