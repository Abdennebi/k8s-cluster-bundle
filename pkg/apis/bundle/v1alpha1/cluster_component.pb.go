// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pkg/apis/bundle/v1alpha1/cluster_component.proto

package v1alpha1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_struct "github.com/golang/protobuf/ptypes/struct"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Kubernetes objects grouped into cluster components and versioned together.
// These could be applications or they could be some sort of supporting
// object collection.
type ClusterComponent struct {
	// Name of this component. Each component in a bundle must have a unique
	// name. For an example you might have a 'kube-apiserver' component or
	// perhaps even a 'kubernetes' component, depending on the granulatarity of
	// the Bundle components.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Version-string for this component.
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	// Structured Kubenetes objects that run as part of this app, whether on the
	// master, on the nodes, or in some other fashion. There is no ordering
	// guarantee for when these objects are deployed (they can be deployed in any
	// order to the cluster).
	ClusterObjects       []*ClusterObject `protobuf:"bytes,3,rep,name=cluster_objects,json=clusterObjects,proto3" json:"cluster_objects,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ClusterComponent) Reset()         { *m = ClusterComponent{} }
func (m *ClusterComponent) String() string { return proto.CompactTextString(m) }
func (*ClusterComponent) ProtoMessage()    {}
func (*ClusterComponent) Descriptor() ([]byte, []int) {
	return fileDescriptor_39e88fab7b1fe3e6, []int{0}
}

func (m *ClusterComponent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterComponent.Unmarshal(m, b)
}
func (m *ClusterComponent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterComponent.Marshal(b, m, deterministic)
}
func (m *ClusterComponent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterComponent.Merge(m, src)
}
func (m *ClusterComponent) XXX_Size() int {
	return xxx_messageInfo_ClusterComponent.Size(m)
}
func (m *ClusterComponent) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterComponent.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterComponent proto.InternalMessageInfo

func (m *ClusterComponent) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ClusterComponent) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *ClusterComponent) GetClusterObjects() []*ClusterObject {
	if m != nil {
		return m.ClusterObjects
	}
	return nil
}

// A Kubernetes object of unspecified type.
type ClusterObject struct {
	// The name of this cluster object. This must be unique within the Cluster
	// Component.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// A Kubernetes object that's untyped but which has YAML-structure. These have
	// historically been called 'YAMLs' or 'Manifests'. You might expect
	// Kubernetes objects like pods, deployments, or daemonsets to live here.
	//
	// Types that are valid to be assigned to KubeData:
	//	*ClusterObject_Inlined
	//	*ClusterObject_File
	KubeData isClusterObject_KubeData `protobuf_oneof:"kube_data"`
	// Patches this cluster object, which allow specialization/customization
	// of the cluster via strategic merge patch.
	//
	// Types that are valid to be assigned to PatchData:
	//	*ClusterObject_PatchCollection
	//	*ClusterObject_PatchFile
	PatchData            isClusterObject_PatchData `protobuf_oneof:"patch_data"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *ClusterObject) Reset()         { *m = ClusterObject{} }
func (m *ClusterObject) String() string { return proto.CompactTextString(m) }
func (*ClusterObject) ProtoMessage()    {}
func (*ClusterObject) Descriptor() ([]byte, []int) {
	return fileDescriptor_39e88fab7b1fe3e6, []int{1}
}

func (m *ClusterObject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterObject.Unmarshal(m, b)
}
func (m *ClusterObject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterObject.Marshal(b, m, deterministic)
}
func (m *ClusterObject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterObject.Merge(m, src)
}
func (m *ClusterObject) XXX_Size() int {
	return xxx_messageInfo_ClusterObject.Size(m)
}
func (m *ClusterObject) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterObject.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterObject proto.InternalMessageInfo

func (m *ClusterObject) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type isClusterObject_KubeData interface {
	isClusterObject_KubeData()
}

type ClusterObject_Inlined struct {
	Inlined *_struct.Struct `protobuf:"bytes,2,opt,name=inlined,proto3,oneof"`
}

type ClusterObject_File struct {
	File *File `protobuf:"bytes,3,opt,name=file,proto3,oneof"`
}

func (*ClusterObject_Inlined) isClusterObject_KubeData() {}

func (*ClusterObject_File) isClusterObject_KubeData() {}

func (m *ClusterObject) GetKubeData() isClusterObject_KubeData {
	if m != nil {
		return m.KubeData
	}
	return nil
}

func (m *ClusterObject) GetInlined() *_struct.Struct {
	if x, ok := m.GetKubeData().(*ClusterObject_Inlined); ok {
		return x.Inlined
	}
	return nil
}

func (m *ClusterObject) GetFile() *File {
	if x, ok := m.GetKubeData().(*ClusterObject_File); ok {
		return x.File
	}
	return nil
}

type isClusterObject_PatchData interface {
	isClusterObject_PatchData()
}

type ClusterObject_PatchCollection struct {
	PatchCollection *PatchCollection `protobuf:"bytes,4,opt,name=patch_collection,json=patchCollection,proto3,oneof"`
}

type ClusterObject_PatchFile struct {
	PatchFile *File `protobuf:"bytes,5,opt,name=patch_file,json=patchFile,proto3,oneof"`
}

func (*ClusterObject_PatchCollection) isClusterObject_PatchData() {}

func (*ClusterObject_PatchFile) isClusterObject_PatchData() {}

func (m *ClusterObject) GetPatchData() isClusterObject_PatchData {
	if m != nil {
		return m.PatchData
	}
	return nil
}

func (m *ClusterObject) GetPatchCollection() *PatchCollection {
	if x, ok := m.GetPatchData().(*ClusterObject_PatchCollection); ok {
		return x.PatchCollection
	}
	return nil
}

func (m *ClusterObject) GetPatchFile() *File {
	if x, ok := m.GetPatchData().(*ClusterObject_PatchFile); ok {
		return x.PatchFile
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ClusterObject) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ClusterObject_OneofMarshaler, _ClusterObject_OneofUnmarshaler, _ClusterObject_OneofSizer, []interface{}{
		(*ClusterObject_Inlined)(nil),
		(*ClusterObject_File)(nil),
		(*ClusterObject_PatchCollection)(nil),
		(*ClusterObject_PatchFile)(nil),
	}
}

func _ClusterObject_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ClusterObject)
	// kube_data
	switch x := m.KubeData.(type) {
	case *ClusterObject_Inlined:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Inlined); err != nil {
			return err
		}
	case *ClusterObject_File:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.File); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ClusterObject.KubeData has unexpected type %T", x)
	}
	// patch_data
	switch x := m.PatchData.(type) {
	case *ClusterObject_PatchCollection:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PatchCollection); err != nil {
			return err
		}
	case *ClusterObject_PatchFile:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PatchFile); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ClusterObject.PatchData has unexpected type %T", x)
	}
	return nil
}

func _ClusterObject_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ClusterObject)
	switch tag {
	case 2: // kube_data.inlined
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(_struct.Struct)
		err := b.DecodeMessage(msg)
		m.KubeData = &ClusterObject_Inlined{msg}
		return true, err
	case 3: // kube_data.file
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(File)
		err := b.DecodeMessage(msg)
		m.KubeData = &ClusterObject_File{msg}
		return true, err
	case 4: // patch_data.patch_collection
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PatchCollection)
		err := b.DecodeMessage(msg)
		m.PatchData = &ClusterObject_PatchCollection{msg}
		return true, err
	case 5: // patch_data.patch_file
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(File)
		err := b.DecodeMessage(msg)
		m.PatchData = &ClusterObject_PatchFile{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ClusterObject_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ClusterObject)
	// kube_data
	switch x := m.KubeData.(type) {
	case *ClusterObject_Inlined:
		s := proto.Size(x.Inlined)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ClusterObject_File:
		s := proto.Size(x.File)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// patch_data
	switch x := m.PatchData.(type) {
	case *ClusterObject_PatchCollection:
		s := proto.Size(x.PatchCollection)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ClusterObject_PatchFile:
		s := proto.Size(x.PatchFile)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*ClusterComponent)(nil), "pkg.apis.bundle.v1alpha1.ClusterComponent")
	proto.RegisterType((*ClusterObject)(nil), "pkg.apis.bundle.v1alpha1.ClusterObject")
}

func init() {
	proto.RegisterFile("pkg/apis/bundle/v1alpha1/cluster_component.proto", fileDescriptor_39e88fab7b1fe3e6)
}

var fileDescriptor_39e88fab7b1fe3e6 = []byte{
	// 382 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0x51, 0x4b, 0xeb, 0x30,
	0x1c, 0xc5, 0xd7, 0x6d, 0xf7, 0x8e, 0x65, 0xf7, 0xba, 0x91, 0x17, 0xcb, 0x10, 0x19, 0x43, 0x70,
	0x82, 0x4b, 0xdc, 0xe6, 0x83, 0x6f, 0xc2, 0x0a, 0x3a, 0x44, 0x70, 0x54, 0xf0, 0xc1, 0x97, 0x91,
	0xa6, 0x59, 0x57, 0x9b, 0x26, 0xa1, 0x4d, 0xf7, 0x41, 0xfc, 0x48, 0x7e, 0x32, 0x69, 0xda, 0x8a,
	0x03, 0x0b, 0xbe, 0xe5, 0x84, 0x73, 0xfe, 0xff, 0x93, 0x1f, 0x01, 0x57, 0x2a, 0x0a, 0x30, 0x51,
	0x61, 0x8a, 0xbd, 0x4c, 0xf8, 0x9c, 0xe1, 0xfd, 0x8c, 0x70, 0xb5, 0x23, 0x33, 0x4c, 0x79, 0x96,
	0x6a, 0x96, 0x6c, 0xa8, 0x8c, 0x95, 0x14, 0x4c, 0x68, 0xa4, 0x12, 0xa9, 0x25, 0xb4, 0x55, 0x14,
	0xa0, 0x3c, 0x81, 0x8a, 0x04, 0xaa, 0x12, 0xc3, 0x93, 0x40, 0xca, 0x80, 0x33, 0x6c, 0x7c, 0x5e,
	0xb6, 0xc5, 0xa9, 0x4e, 0x32, 0x5a, 0xe6, 0x86, 0x97, 0xb5, 0x9b, 0x0a, 0x9d, 0x2f, 0x8a, 0xa5,
	0x28, 0xdd, 0x67, 0xb5, 0x6e, 0x45, 0x34, 0xdd, 0x15, 0xae, 0xf1, 0xbb, 0x05, 0x06, 0x4e, 0xd1,
	0xd3, 0xa9, 0x6a, 0x42, 0x08, 0xda, 0x82, 0xc4, 0xcc, 0xb6, 0x46, 0xd6, 0xa4, 0xeb, 0x9a, 0x33,
	0xb4, 0x41, 0x67, 0xcf, 0x92, 0x34, 0x94, 0xc2, 0x6e, 0x9a, 0xeb, 0x4a, 0xc2, 0x35, 0xe8, 0x57,
	0x2f, 0x95, 0xde, 0x1b, 0xa3, 0x3a, 0xb5, 0x5b, 0xa3, 0xd6, 0xa4, 0x37, 0x3f, 0x47, 0x75, 0x0f,
	0x45, 0xe5, 0xca, 0x27, 0xe3, 0x77, 0x8f, 0xe8, 0x77, 0x99, 0x8e, 0x3f, 0x9a, 0xe0, 0xff, 0x81,
	0xe3, 0xc7, 0x46, 0x0b, 0xd0, 0x09, 0x05, 0x0f, 0x05, 0xf3, 0x4d, 0xa3, 0xde, 0xfc, 0x18, 0x15,
	0xf8, 0x50, 0x85, 0x0f, 0x3d, 0x1b, 0x7c, 0xab, 0x86, 0x5b, 0x39, 0xe1, 0x35, 0x68, 0x6f, 0x43,
	0xce, 0xec, 0x96, 0x49, 0x9c, 0xd6, 0x37, 0xbc, 0x0b, 0x39, 0x5b, 0x35, 0x5c, 0xe3, 0x86, 0x2f,
	0x60, 0x60, 0xa0, 0x6d, 0xa8, 0xe4, 0x9c, 0x51, 0x9d, 0x53, 0x68, 0x9b, 0x09, 0x17, 0xf5, 0x13,
	0xd6, 0x79, 0xc2, 0xf9, 0x0a, 0xac, 0x2c, 0xb7, 0xaf, 0x0e, 0xaf, 0xe0, 0x2d, 0x00, 0xc5, 0x5c,
	0xd3, 0xe9, 0xcf, 0xaf, 0x3a, 0x59, 0x6e, 0xd7, 0x64, 0x72, 0xb1, 0xec, 0x81, 0x6e, 0x94, 0x79,
	0x6c, 0xe3, 0x13, 0x4d, 0x96, 0xff, 0xaa, 0x69, 0x46, 0x3d, 0xbe, 0x3e, 0x04, 0xa1, 0xde, 0x65,
	0x1e, 0xa2, 0x32, 0xc6, 0xf7, 0x86, 0x8c, 0xc3, 0x65, 0xe6, 0xaf, 0x39, 0xd1, 0x5b, 0x99, 0xc4,
	0x38, 0xba, 0x49, 0xa7, 0x25, 0xf9, 0x69, 0xf9, 0x47, 0xea, 0xfe, 0x8c, 0xf7, 0xd7, 0x30, 0x5d,
	0x7c, 0x06, 0x00, 0x00, 0xff, 0xff, 0x33, 0x74, 0xe1, 0xc2, 0xee, 0x02, 0x00, 0x00,
}
