// Copyright 2018 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package pkg.apis.bundleext.v1alpha1;

option go_package = "github.com/GoogleCloudPlatform/k8s-cluster-bundle/pkg/apis/bundleext/v1alpha1";

// A collection of PatcheTemplates that apply to a specific object.
message PatchCollection {
  repeated PatchTemplate patches = 1;
}

 // Patch provides functionality for patching Kubernetes objects. This relies on
 // the strategic merge patch functionality from kubernetes.
message PatchTemplate {
  // Required. Name provides an identifier for this patch.
  string name = 1;

   // The Kubernetes object reference for a custom resource that provides the
  // options (parameters) for this Patch.
  ObjectReference object_ref = 2;

  // Required. The patch itself. A templated YAML that's meant to be applied
  // viastrategic-merge-patch.  The patch itself must be specified as a
  // Go-Templatized YAML.
  string template_string = 3;

   // Whether this patch is required (or optional) to be applied.
  bool is_required = 4;
}

// Object reference for Kubernetes types. For example, if a Kubernetes
// object begins with:
//
//   apiVersion: apps/v1
//   kind: StatefulSet
//   metadata: ...
//     name: foo
//   spec: ...
//
// The corresponding ObjectReferenc (or ObjectRef) would be:
//
//   {apiVersion: 'apps/v1', kind: 'StatefulSet', name: 'foo'}
message ObjectReference {
  string api_version = 1;
  string kind = 2;
  string name = 3;
}
